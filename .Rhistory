install.packages("ggpplot2")
install.packages("ggplot2")
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library (ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
ggplot(movies, aes(votes, rating))
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
activity = read.csv("./data/activity.csv", header=TRUE, na.strings="NA", colClasses = c("numeric", "Date", "factor"))
##activity_filtered = na.omit(activity)
totalStepsPerDay = aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
## Create histogram
ggplot(totalStepsPerDay, aes(x = steps)) +
geom_histogram(fill = "royalblue4", binwidth = 1000) +
labs(title="Histogram of Total Steps per Day",
x = "Number of Steps per Day", y = "Frequency") + theme_bw()
setwd("C:/Users/Maria/Documents/Courses/Coursera_Data_Science/4_Reproducible_Research/Peer_Assessment_1")
activity = read.csv("./data/activity.csv", header=TRUE, na.strings="NA", colClasses = c("numeric", "Date", "factor"))
##activity_filtered = na.omit(activity)
totalStepsPerDay = aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
## Create histogram
ggplot(totalStepsPerDay, aes(x = steps)) +
geom_histogram(fill = "royalblue4", binwidth = 1000) +
labs(title="Histogram of Total Steps per Day",
x = "Number of Steps per Day", y = "Frequency") + theme_bw()
library(ggplot2)
activity = read.csv("./data/activity.csv", header=TRUE, na.strings="NA", colClasses = c("numeric", "Date", "factor"))
##activity_filtered = na.omit(activity)
totalStepsPerDay = aggregate(steps ~ date, data = activity, sum, na.rm = TRUE)
## Create histogram
ggplot(totalStepsPerDay, aes(x = steps)) +
geom_histogram(fill = "royalblue4", binwidth = 1000) +
labs(title="Histogram of Total Steps per Day",
x = "Number of Steps per Day", y = "Frequency") + theme_bw()
avgSteps <- aggregate(activity$steps, list(interval = as.numeric(as.character(activity$interval))), FUN = "mean",na.rm = TRUE)
names(avgSteps)[2] = "meanSteps"
# Plot the 5 minunute interval
ggplot(avgSteps, aes(x=interval, y=meanSteps)) +
geom_line(color="royalblue4", size=1) +
labs(title="Average Daily Activity Pattern", x="5-minute interval", y="Number of steps") +
theme_bw()
avgSteps[which.max(avgSteps$meanSteps),]
newActivity <- activity
for (i in 1:nrow(newActivity)) {
if (is.na(newActivity$steps[i])) {
newActivity$steps[i] = avgSteps[which(newActivity$interval[i] == avgSteps$interval), ]$meanSteps
}
}
sum(is.na(newActivity))
## Calculate total steps per day
newTotalStepsPerDay = aggregate(steps ~ date, data = newActivity, sum, na.rm = FALSE)
## Create a histogram with the total steps per day
ggplot(newTotalStepsPerDay, aes(x = steps)) +
geom_histogram(fill = "green4", binwidth = 1000) +
labs(title="Histogram of Total Steps per Day",
x = "Number of Steps per Day", y = "Frequency") + theme_bw()
newActivity$dayOfWeek = as.factor(ifelse(weekdays(newActivity$date) %in% c("Saturday","Sunday"),"weekend", "weekday"))
head(newActivity)
avgSteps2 <- aggregate(newActivity$steps,
list(interval = as.numeric(as.character(newActivity$interval)),
weekdays = newActivity$dayOfWeek),
FUN = "mean")
names(avgSteps2)[3] <- "meanSteps"
ggplot(avgSteps2, aes(x=interval, y=meanSteps)) +
geom_line(color="royalblue4") +
facet_wrap(~ weekdays, nrow=2, ncol=1) +
labs(x="Interval", y="Number of steps") +
theme_bw()
